// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

package generated

import (
	convert "EasyGo/common/convert"
	usermodel "EasyGo/services/model/userModel"
	userrpcmodel "EasyGo/services/rpc/user/userRpcModel"
)

type ConverterImpl struct{}

func (c *ConverterImpl) UserR2S(source *userrpcmodel.User) *usermodel.Users {
	var pUserModelUsers *usermodel.Users
	if source != nil {
		var userModelUsers usermodel.Users
		userModelUsers.Id = (*source).Id
		userModelUsers.Username = (*source).Username
		userModelUsers.Nickname = (*source).Nickname
		userModelUsers.Name = convert.StringToSQLNullString((*source).Name)
		userModelUsers.CreatedAt = convert.StringToSQLTime((*source).CreatedAt)
		userModelUsers.UpdatedAt = convert.StringToSQLTime((*source).UpdatedAt)
		userModelUsers.DeletedAt = convert.StringToSQLNullTime((*source).DeletedAt)
		userModelUsers.Status = (*source).Status
		userModelUsers.Signature = convert.StringToSQLNullString((*source).Signature)
		userModelUsers.Avatar = (*source).Avatar
		userModelUsers.Sex = (*source).Sex
		userModelUsers.Mobile = (*source).Mobile
		userModelUsers.IdCardNum = convert.StringToSQLNullString((*source).IdCardNum)
		userModelUsers.Birth = convert.StringToSQLNullTime((*source).Birth)
		pUserModelUsers = &userModelUsers
	}
	return pUserModelUsers
}
func (c *ConverterImpl) UserS2R(source *usermodel.Users) *userrpcmodel.User {
	var pUserRpcModelUser *userrpcmodel.User
	if source != nil {
		var userRpcModelUser userrpcmodel.User
		userRpcModelUser.Id = (*source).Id
		userRpcModelUser.Username = (*source).Username
		userRpcModelUser.Nickname = (*source).Nickname
		userRpcModelUser.Name = convert.SQLStringToPString((*source).Name)
		userRpcModelUser.CreatedAt = convert.SQLTimeToString((*source).CreatedAt)
		userRpcModelUser.UpdatedAt = convert.SQLTimeToString((*source).UpdatedAt)
		userRpcModelUser.DeletedAt = convert.SQLNullTimeToString((*source).DeletedAt)
		userRpcModelUser.Status = (*source).Status
		userRpcModelUser.Signature = convert.SQLStringToPString((*source).Signature)
		userRpcModelUser.Avatar = (*source).Avatar
		userRpcModelUser.Sex = (*source).Sex
		userRpcModelUser.Mobile = (*source).Mobile
		userRpcModelUser.IdCardNum = convert.SQLStringToPString((*source).IdCardNum)
		userRpcModelUser.Birth = convert.SQLNullTimeToString((*source).Birth)
		pUserRpcModelUser = &userRpcModelUser
	}
	return pUserRpcModelUser
}
func (c *ConverterImpl) UsersS2R(source []*usermodel.Users) []*userrpcmodel.User {
	var pUserRpcModelUserList []*userrpcmodel.User
	if source != nil {
		pUserRpcModelUserList = make([]*userrpcmodel.User, len(source))
		for i := 0; i < len(source); i++ {
			pUserRpcModelUserList[i] = c.UserS2R(source[i])
		}
	}
	return pUserRpcModelUserList
}
