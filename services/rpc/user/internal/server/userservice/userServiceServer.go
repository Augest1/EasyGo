// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"EasyGo/services/rpc/user/internal/logic/userservice"
	"EasyGo/services/rpc/user/internal/svc"
	"EasyGo/services/rpc/user/userRpcModel"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	userRpcModel.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) CreateUser(ctx context.Context, in *userRpcModel.ReqCreateUser) (*userRpcModel.ResUser, error) {
	l := userservicelogic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServiceServer) GetUserById(ctx context.Context, in *userRpcModel.ReqId) (*userRpcModel.ResUser, error) {
	l := userservicelogic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserServiceServer) UpdateUser(ctx context.Context, in *userRpcModel.ReqCreateUser) (*userRpcModel.ResUser, error) {
	l := userservicelogic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}
